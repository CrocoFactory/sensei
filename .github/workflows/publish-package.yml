name: Publish Package and Create Release

on:
  workflow_dispatch:

jobs:
  publish-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine toml

      - name: Build package
        run: python -m build

      - name: Extract version and prerelease info from pyproject.toml
        id: get_version
        run: |
          python -c "
          import toml
          import os
          with open('pyproject.toml', 'r') as f:
              data = toml.load(f)
          version = data['tool']['poetry']['version']
          print(f'Version: {version}')
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f'VERSION={version}', file=fh)
              if any(tag in version for tag in ['beta', 'alpha', 'dev']):
                  print('IS_PRERELEASE=true', file=fh)
              else:
                  print('IS_PRERELEASE=false', file=fh)
          "

      - name: Upload package to PyPI
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload dist/*

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
